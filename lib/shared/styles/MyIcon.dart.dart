/// Flutter icons MyIcon
/// Copyright (C) 2022 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  MyIcon
///      fonts:
///       - asset: fonts/MyIcon.ttf
///
///
/// * Entypo, Copyright (C) 2012 by Daniel Bruce
///         Author:    Daniel Bruce
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://www.entypo.com
/// * Typicons, (c) Stephen Hutchings 2012
///         Author:    Stephen Hutchings
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://typicons.com/
/// * Meteocons, Copyright (C) 2012 by Alessio Atzeni
///         Author:    Alessio Atzeni
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://www.alessioatzeni.com
/// * Font Awesome 4, Copyright (C) 2016 by Dave Gandy
///         Author:    Dave Gandy
///         License:   SIL ()
///         Homepage:  http://fortawesome.github.com/Font-Awesome/
/// * Elusive, Copyright (C) 2013 by Aristeides Stathopoulos
///         Author:    Aristeides Stathopoulos
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://aristeides.com/
/// * Material Design Icons, Copyright (C) Google, Inc
///         Author:    Google
///         License:   Apache 2.0 (https://www.apache.org/licenses/LICENSE-2.0)
///         Homepage:  https://design.google.com/icons/
/// * RPG Awesome, Copyright (c) 2014, Daniela Howe
///         Author:    Daniela Howe & Ivan Montiel
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://nagoshiashumari.github.io/Rpg-Awesome/
/// * Font Awesome 5, Copyright (C) 2016 by Dave Gandy
///         Author:    Dave Gandy
///         License:   SIL (https://github.com/FortAwesome/Font-Awesome/blob/master/LICENSE.txt)
///         Homepage:  http://fortawesome.github.com/Font-Awesome/
///
import 'package:flutter/widgets.dart';

class MyIcon {
  MyIcon._();

  static const _kFontFam = 'MyIcon';
  static const String? _kFontPkg = null;

  static const IconData trash =
      IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData temperatire =
      IconData(0xe801, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData temperature =
      IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData text_height =
      IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData text_height_1 =
      IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData directions_walk =
      IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData autorenew =
      IconData(0xe806, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData pan_tool =
      IconData(0xe807, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData rune_stone =
      IconData(0xea89, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData heart =
      IconData(0xf004, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData star =
      IconData(0xf005, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData text_height2 =
      IconData(0xf034, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData arrow_left =
      IconData(0xf060, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData arrow_right =
      IconData(0xf061, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData arrow_up =
      IconData(0xf062, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData arrow_down =
      IconData(0xf063, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData share =
      IconData(0xf064, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData grunt =
      IconData(0xf3ad, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData weight =
      IconData(0xf496, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData walking =
      IconData(0xf554, fontFamily: _kFontFam, fontPackage: _kFontPkg);
}
